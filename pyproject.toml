[project]
name = "simcity"
version = "0.1.0"
description = "LLM-driven multi-agent macroeconomic simulation framework"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "Apache-2.0" }
authors = [
    { name = "SimCity Development Team" }
]
keywords = ["llm", "simulation", "economics", "multi-agent", "macroeconomics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core dependencies
    "openai>=1.12.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",

    # Data processing
    "numpy>=1.26.0",
    "pandas>=2.1.0",
    "scipy>=1.11.0",

    # Visualization
    "streamlit>=1.31.0",
    "plotly>=5.18.0",
    "matplotlib>=3.8.0",

    # Configuration
    "pyyaml>=6.0.1",
    "jsonschema>=4.20.0",

    # Utilities
    "loguru>=0.7.2",
    "tqdm>=4.66.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
]
enhanced = [
    "pillow>=10.1.0",  # City map image generation
    "networkx>=3.2",   # Agent relationship graphs
]

[project.urls]
Homepage = "https://github.com/yourusername/simcity"
Repository = "https://github.com/yourusername/simcity"
Documentation = "https://github.com/yourusername/simcity/blob/main/README.md"

[project.scripts]
simcity = "src.main:main"
simcity-validate = "src.experiments.validate_phenomena:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "src/visualization/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.ruff]
# Ruff設定
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["E402"]  # Module level import not at top of file (tests need sys.path manipulation)

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
